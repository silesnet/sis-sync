<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <import resource="job-launcher-context.xml" />

  <bean id="sisCustomerJob" parent="simpleJob">
    <property name="steps">
      <list>
        <ref bean="prepareCustomers" />
        <ref bean="importCustomers" />
        <ref bean="confirmCustomersImport" />
        <ref bean="updateInvoiceAccounts" />
      </list>
    </property>
  </bean>

  <bean id="prepareCustomers" parent="simpleStep">
    <property name="itemReader">
      <bean
        class="org.springframework.batch.item.database.JdbcCursorItemReader"
        p:dataSource-ref="dataSource">
        <property name="mapper">
          <bean class="cz.silesnet.sis.sync.mapping.CustomerRowMapper" />
        </property>
        <property name="sql">
          <value><![CDATA[
            SELECT * FROM customers
              WHERE country = 10
                AND is_active
                AND (
                    synchronized IS NULL
                    OR synchronized <= updated
                )
                AND public_id != '9999999'                
		  ]]></value>
        </property>
      </bean>
    </property>
    <property name="itemWriter">
      <bean class="cz.silesnet.sis.sync.item.writer.SisCustomerItemWriter"
        p:ico="${pohoda.ico}" p:resource-ref="customersImportFile" />
    </property>
  </bean>

  <bean id="importCustomers" parent="taskletStep">
    <property name="tasklet">
      <bean parent="importTasklet" p:input-ref="customersImportFile"
        p:output-ref="customersResponseFile" p:ini-ref="customersIniFile" />
    </property>
  </bean>

  <bean id="confirmCustomersImport" parent="simpleStep">
    <property name="itemReader">
      <bean
        class="cz.silesnet.sis.sync.item.reader.SpsCustomerResultItemReader"
        p:resource-ref="customersResponseFile" />
    </property>
    <property name="itemWriter">
      <bean
        class="org.springframework.batch.item.database.BatchSqlUpdateItemWriter"
        p:jdbcTemplate-ref="jdbcTemplate">
        <property name="itemPreparedStatementSetter">
          <bean
            class="cz.silesnet.sis.sync.item.writer.CustomerUpdatePreparedStatementSetter" />
        </property>
        <property name="sql">
          <value><![CDATA[
            UPDATE customers
              SET symbol = ?,
                synchronized = ?
              WHERE id = ?
          ]]></value>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="updateInvoiceAccounts" parent="simpleStep">
    <property name="itemReader">
      <bean class="cz.silesnet.sis.sync.item.reader.CustomerItemReader"
        p:resource-ref="customersResponseFile" p:dao-ref="customerDao"
        p:logImportErrors="false" />
    </property>
    <property name="itemWriter">
      <bean
        class="org.springframework.batch.item.database.BatchSqlUpdateItemWriter"
        p:jdbcTemplate-ref="spsJdbcTemplate" p:assertUpdates="false">
        <property name="itemPreparedStatementSetter">
          <bean
            class="cz.silesnet.sis.sync.item.writer.CustomerSpsInvoicesUpdatePreparedStatementSetter" />
        </property>
        <property name="sql">
          <value><![CDATA[
            UPDATE FA
              SET
                Ucet = ?,
                KodBanky = ?
              WHERE RefAD = ?
                AND DatLikv IS NULL
          ]]></value>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="customersImportFile" parent="resource">
    <constructor-arg value="${customers.import.file.suffix}" />
  </bean>

  <bean id="customersResponseFile" parent="resource">
    <constructor-arg value="${customers.response.file.suffix}" />
  </bean>

  <bean id="customersIniFile" parent="resource">
    <constructor-arg value="${customers.ini.file.suffix}" />
  </bean>

  <bean id="customerDao" class="cz.silesnet.sis.sync.dao.impl.JdbcCustomerDao"
    p:jdbcTemplate-ref="jdbcTemplate" />

</beans>
